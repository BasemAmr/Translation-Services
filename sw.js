const CACHE_NAME="arabic-translation-v1750211842160",OFFLINE_URL="offline.html",assetsToCache=["./index.html","./styles.css","./app.js","./components/Footer.js","./components/HeroSection.js","./components/Navigation.js","./components/PricingCalculator.js","./components/QualityProcess.js","./components/ServicesGrid.js","./components/TestimonialsCarousel.js","./components/TrustBadges.js","./assets/logo.svg","./fonts/IBMPlexSansArabic-Regular.woff2","./","./offline.html"];self.addEventListener("install",e=>{e.waitUntil(caches.open(CACHE_NAME).then(e=>(console.log("Opened cache and caching assets"),e.addAll(assetsToCache))).catch(e=>{console.error("Failed to cache assets:",e),console.log("Assets to cache:",assetsToCache)})),self.skipWaiting()}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==CACHE_NAME)return console.log("Deleting old cache:",e),caches.delete(e)})))),self.clients.claim()}),self.addEventListener("fetch",e=>{"navigate"===e.request.mode?e.respondWith((async()=>{try{return await fetch(e.request)}catch(e){console.log("Fetch failed; returning offline page instead.",e);const s=await caches.open(CACHE_NAME);return await s.match(OFFLINE_URL)}})()):e.respondWith(caches.match(e.request).then(s=>s||fetch(e.request)))});