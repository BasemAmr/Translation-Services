const n=[{from:"English",to:"Arabic",fromCode:"en",toCode:"ar",display:"English"},{from:"Arabic",to:"English",fromCode:"ar",toCode:"en",display:"العربية"},{from:"French",to:"Arabic",fromCode:"fr",toCode:"ar",display:"Français"},{from:"Spanish",to:"Arabic",fromCode:"es",toCode:"ar",display:"Español"}],e=e=>{if("string"==typeof e)try{return JSON.parse(e)}catch(e){return n}return e||n},t=(n=50)=>Array.from({length:n},(n,e)=>({id:e,x:100*Math.random(),y:100*Math.random(),size:3*Math.random()+1,speed:.5*Math.random()+.1,opacity:.5*Math.random()+.1}));class a extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.state=Object.freeze({isVisible:!1,activeLanguagePair:0,particles:t(),animationFrame:null,languagePairs:e(this.getAttribute("language-pairs"))}),this.animationController=null,this.intersectionObserver=null}connectedCallback(){this.render(),this.setupIntersectionObserver(),this.startAnimations(),this.bindEvents()}disconnectedCallback(){this.cleanup()}setState(n){const e="function"==typeof n?n(this.state):{...this.state,...n};this.state=Object.freeze(e),this.updateVisualState()}updateVisualState(){this.state.isVisible&&this.shadowRoot.querySelector(".hero-container").classList.add("is-visible")}render(){this.shadowRoot.innerHTML=`\n      <style>\n        :host {\n          display: block;\n          position: relative;\n          min-height: 80vh;\n          overflow: hidden;\n          --hero-gradient: linear-gradient(135deg, \n            var(--primary-blue, #1E40AF) 0%, \n            #3B82F6 50%, \n            var(--accent-gold, #D97706) 100%);\n        }\n        \n        .hero-container {\n          position: relative;\n          min-height: 80vh;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          background: var(--hero-gradient);\n          opacity: 0;\n          transform: translateY(50px);\n          transition: all 1.2s cubic-bezier(0.4, 0, 0.2, 1);\n        }\n        \n        .hero-container.is-visible {\n          opacity: 1;\n          transform: translateY(0);\n        }\n        \n        /* Glassmorphism Background */\n        .hero-content {\n          position: relative;\n          z-index: 10;\n          text-align: center;\n          max-width: 800px;\n          padding: 3rem;\n          background: rgba(255, 255, 255, 0.1);\n          backdrop-filter: blur(20px);\n          border-radius: 24px;\n          border: 1px solid rgba(255, 255, 255, 0.2);\n          box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n          animation: float 6s ease-in-out infinite;\n        }\n        \n        @keyframes float {\n          0%, 100% { transform: translateY(0px); }\n          50% { transform: translateY(-10px); }\n        }\n        \n        .hero-title {\n          font-size: clamp(2.5rem, 5vw, 4rem);\n          font-weight: 700;\n          color: white;\n          margin-bottom: 1.5rem;\n          background: linear-gradient(45deg, #ffffff, #e0e7ff);\n          background-clip: text;\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n          line-height: 1.2;\n        }\n        \n        .hero-subtitle {\n          font-size: 1.25rem;\n          color: rgba(255, 255, 255, 0.9);\n          margin-bottom: 2rem;\n          line-height: 1.6;\n        }\n        \n        .cta-container {\n          display: flex;\n          gap: 1rem;\n          justify-content: center;\n          flex-wrap: wrap;\n        }\n        \n        .cta-primary, .cta-secondary {\n          padding: 1rem 2rem;\n          border-radius: 12px;\n          font-weight: 600;\n          text-decoration: none;\n          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n          display: inline-flex;\n          align-items: center;\n          gap: 0.5rem;\n          position: relative;\n          overflow: hidden;\n        }\n        \n        .cta-primary {\n          background: var(--accent-gold, #D97706);\n          color: white;\n          box-shadow: 0 10px 20px rgba(217, 119, 6, 0.3);\n        }\n        \n        .cta-primary:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 15px 30px rgba(217, 119, 6, 0.4);\n        }\n        \n        .cta-secondary {\n          background: rgba(255, 255, 255, 0.1);\n          color: white;\n          border: 2px solid rgba(255, 255, 255, 0.3);\n        }\n        \n        .cta-secondary:hover {\n          background: rgba(255, 255, 255, 0.2);\n          transform: translateY(-2px);\n        }\n        \n        /* Language Connection Animation */\n        .language-connections {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          z-index: 15;\n          pointer-events: none;\n        }\n        \n        .language-badge {\n          position: absolute;\n          padding: 0.75rem 1.5rem;\n          background: rgba(255, 255, 255, 0.15);\n          backdrop-filter: blur(10px);\n          border-radius: 50px;\n          color: white;\n          font-weight: 600;\n          border: 1px solid rgba(255, 255, 255, 0.2);\n          animation: pulse 3s ease-in-out infinite;\n        }\n        \n        .language-badge:nth-child(1) { top: 20%; left: 10%; animation-delay: 0s; }\n        .language-badge:nth-child(2) { top: 20%; right: 10%; animation-delay: 0.5s; }\n        .language-badge:nth-child(3) { bottom: 30%; left: 15%; animation-delay: 1s; }\n        .language-badge:nth-child(4) { bottom: 30%; right: 15%; animation-delay: 1.5s; }\n        \n        @keyframes pulse {\n          0%, 100% { transform: scale(1); opacity: 0.8; }\n          50% { transform: scale(1.05); opacity: 1; }\n        }\n        \n        .connection-svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          z-index: 4;\n        }\n        \n        /* \n         * Dashed and animated connection path for language connections\n         */\n        .connection-path {\n          fill: none;\n          stroke: rgba(255, 255, 255, 0.7);\n          stroke-width: 2.5;\n          stroke-dasharray: 10, 8; /* Dash, gap */\n          stroke-linecap: round;\n          animation: dashmove 2s linear infinite;\n          transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n        }\n        @keyframes dashmove {\n          to {\n            stroke-dashoffset: -36;\n          }\n        }\n        .connection-path.animated {\n          opacity: 1;\n          transform: scale(1.05);\n        }\n        \n        /* Particle Background */\n        .particles-container {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          z-index: 1;\n          opacity: 0.6;\n        }\n        \n        .particle {\n          position: absolute;\n          background: rgba(255, 255, 255, 0.8);\n          border-radius: 50%;\n          animation: float-particle linear infinite;\n        }\n        \n        @keyframes float-particle {\n          0% { transform: translateY(100vh) translateX(0); }\n          100% { transform: translateY(-100px) translateX(50px); }\n        }\n        \n        /* Trust Indicators - Subtle floating badges */\n        .trust-indicators {\n          position: absolute;\n          bottom: 2rem;\n          left: 50%;\n          transform: translateX(-50%);\n          display: flex;\n          gap: 0.75rem;\n          justify-content: center;\n          flex-wrap: wrap;\n          max-width: 600px;\n          z-index: 5;\n          pointer-events: none;\n        }\n        \n        .trust-badge {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          background: rgba(255, 255, 255, 0.08);\n          padding: 0.5rem 1rem;\n          border-radius: 50px;\n          color: rgba(255, 255, 255, 0.85);\n          font-size: 0.75rem;\n          backdrop-filter: blur(15px);\n          border: 1px solid rgba(255, 255, 255, 0.15);\n          transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n          text-align: center;\n          white-space: nowrap;\n          opacity: 0.7;\n          pointer-events: auto;\n          cursor: default;\n        }\n        \n        .trust-badge:hover {\n          opacity: 1;\n          background: rgba(255, 255, 255, 0.12);\n          transform: translateY(-2px) scale(1.05);\n          box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);\n        }\n        \n        .trust-icon {\n          width: 14px;\n          height: 14px;\n          fill: var(--accent-gold, #D97706);\n          flex-shrink: 0;\n        }\n        \n        .trust-text {\n          font-weight: 500;\n          line-height: 1.2;\n        }\n        \n        /* Responsive Design */\n        @media (max-width: 768px) {\n          .hero-content {\n            padding: 2rem;\n            margin: 1rem;\n          }\n          \n          .language-badge {\n            padding: 0.5rem 1rem;\n            font-size: 0.875rem;\n          }\n          \n          .trust-indicators {\n            bottom: 1rem;\n            gap: 1rem;\n          }\n          \n          .cta-container {\n            flex-direction: column;\n            align-items: center;\n          }\n        }\n      </style>\n      \n      <div class="hero-container">\n        \x3c!-- Particle Background --\x3e\n        <div class="particles-container"></div>\n        \n        \x3c!-- Language Connection Animation --\x3e\n        <div class="language-connections">\n          ${this.renderLanguageBadges()}\n          \n          <svg class="connection-svg" xmlns="http://www.w3.org/2000/svg">\n            ${this.renderConnectionPaths()}\n          </svg>\n        </div>\n        \n        \x3c!-- Main Hero Content --\x3e\n        <div class="hero-content">\n          <h1 class="hero-title">\n            Professional Arabic Translation Services\n          </h1>\n          <p class="hero-subtitle">\n            Expert linguists delivering accurate, culturally-aware translations for your business needs. \n            Trusted by Fortune 500 companies worldwide.\n          </p>\n          <div class="cta-container">\n            <a href="#pricing" class="cta-primary">\n              Get Your Quote Today\n              <svg class="trust-icon" viewBox="0 0 20 20">\n                <path d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"/>\n              </svg>\n            </a>\n            <a href="#services" class="cta-secondary">\n              Explore Services\n            </a>\n          </div>\n        </div>\n        \n        \x3c!-- Trust Indicators - Subtle floating badges --\x3e\n        <div class="trust-indicators">\n          <div class="trust-badge">\n            <svg class="trust-icon" viewBox="0 0 20 20">\n              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>\n            </svg>\n            <span class="trust-text">ISO Certified</span>\n          </div>\n          <div class="trust-badge">\n            <svg class="trust-icon" viewBox="0 0 20 20">\n              <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>\n            </svg>\n            <span class="trust-text">500+ Clients</span>\n          </div>\n          <div class="trust-badge">\n            <svg class="trust-icon" viewBox="0 0 20 20">\n              <path d="M12 2l3.09 6.26L22 9l-5 4.87L18.18 22 12 18.27 5.82 22 7 13.87 2 9l6.91-.74L12 2z"/>\n            </svg>\n            <span class="trust-text">99.9% Accuracy</span>\n          </div>\n          <div class="trust-badge">\n            <svg class="trust-icon" viewBox="0 0 20 20">\n              <path d="M10 2L3 7v11c0 5.55 3.84 10 7 10s7-4.45 7-10V7l-7-5z"/>\n            </svg>\n            <span class="trust-text">24/7 Support</span>\n          </div>\n        </div>\n      </div>\n    `,this.createParticles(),this.createLanguageConnections()}renderLanguageBadges(){return this.state.languagePairs.map((n,e)=>`\n        <div class="language-badge" data-lang="${n.fromCode}" style="--badge-index: ${e}">\n          ${n.display}\n        </div>\n      `).join("")}renderConnectionPaths(){return this.state.languagePairs.slice(0,-1).map((n,e)=>`\n        <path class="connection-path" data-connection="${e}" style="--path-delay: ${.5*e}s"></path>\n      `).join("")}static get observedAttributes(){return["language-pairs"]}attributeChangedCallback(n,t,a){"language-pairs"===n&&t!==a&&(this.setState({languagePairs:e(a)}),this.render())}createParticles(){const n=this.shadowRoot.querySelector(".particles-container");this.state.particles.forEach(e=>{const t=document.createElement("div");t.className="particle",t.style.cssText=`\n        left: ${e.x}%;\n        width: ${e.size}px;\n        height: ${e.size}px;\n        opacity: ${e.opacity};\n        animation-duration: ${15+10*Math.random()}s;\n        animation-delay: ${10*Math.random()}s;\n      `,n.appendChild(t)})}createLanguageConnections(){const n=this.shadowRoot.querySelectorAll(".language-badge"),e=this.shadowRoot.querySelector(".connection-svg").querySelectorAll(".connection-path"),t=()=>{requestAnimationFrame(()=>{const t=this.shadowRoot.querySelector(".hero-container")?.getBoundingClientRect();t&&n.length&&e.length&&e.forEach((e,a)=>{if(n[a]&&n[a+1]){const i=((n,e,t=null)=>{const a=n.getBoundingClientRect(),i=e.getBoundingClientRect(),r=t?t.left:0,s=t?t.top:0,o=a.left+a.width/2-r,c=a.top+a.height/2-s,l=i.left+i.width/2-r,d=i.top+i.height/2-s;return`M ${o} ${c} Q ${(o+l)/2} ${Math.min(c,d)-50} ${l} ${d}`})(n[a],n[a+1],t);e.setAttribute("d",i)}})})};setTimeout(t,500),window.addEventListener("resize",t),window.addEventListener("orientationchange",t),this.resizeObserver||(this.resizeObserver=new ResizeObserver(t),this.resizeObserver.observe(this.shadowRoot.querySelector(".hero-container")),n.forEach(n=>this.resizeObserver.observe(n))),this.updateConnections=t}setupIntersectionObserver(){this.intersectionObserver=new IntersectionObserver(n=>{n.forEach(n=>{n.isIntersecting&&(this.setState({isVisible:!0}),this.intersectionObserver.unobserve(this))})},{threshold:.1}),this.intersectionObserver.observe(this)}startAnimations(){this.shadowRoot.querySelectorAll(".language-badge").forEach((n,e)=>{setTimeout(()=>{n.style.opacity="1",n.style.transform="scale(1)"},200*e)})}bindEvents(){this.shadowRoot.querySelectorAll(".cta-primary, .cta-secondary").forEach(n=>{n.addEventListener("click",e=>{if(n.getAttribute("href").startsWith("#")){e.preventDefault();const t=n.getAttribute("href").slice(1),a=document.getElementById(t);a&&a.scrollIntoView({behavior:"smooth",block:"start"})}})})}cleanup(){this.intersectionObserver&&this.intersectionObserver.disconnect(),this.resizeObserver&&this.resizeObserver.disconnect(),this.updateConnections&&(window.removeEventListener("resize",this.updateConnections),window.removeEventListener("orientationchange",this.updateConnections)),this.state.animationFrame&&cancelAnimationFrame(this.state.animationFrame)}}customElements.define("hero-section",a);export{a as HeroSection};